name: Backend deployment pipeline

on:
  workflow_run:
    workflows: ["Backend Build Pipeline"]
    branches:
      - main
    types:
      - completed
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy (defaults to latest commit SHA)'
        required: false
        type: string

env:
  PROJECT_ID: quest-lock
  AR_LOCATION: europe-west1
  REPOSITORY: quest-lock
  SERVICE: api
  REGION: europe-west1

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set image tag
        id: image-tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ inputs.image_tag }}" ]; then
            echo "tag=${{ inputs.image_tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.AR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest
          flags: |
            --cpu=1
            --memory=1Gi
            --port=8000
            --concurrency=100
            --max-instances=2
            --min-instances=1
            --execution-environment=gen2
            --service-account=${{ vars.RUNNER_SERVICE_ACCOUNT }}
            --add-cloudsql-instances=quest-lock:europe-west1:quest-lock-production
            --vpc-egress=private-ranges-only
          env_vars: |
            ENVIRONMENT=production
            DATABASE_MAX_CONNECTIONS=5
            DATABASE_MIN_CONNECTIONS=1
            SERVICE_HOST=0.0.0.0
            SERVICE_PORT=8000
            BACKEND_CORS_ORIGINS="https://quest-lock.com"
            AUTH_JWKS_URL="https://quest-lock.uk.auth0.com/.well-known/jwks.json"
          secrets: |
            DATABASE_URL=quest-lock-production-database-url:latest