services:

  frontend:
    image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:latest'
    build:
      context: ./frontend
      args:
        - NODE_ENV=development
        - VITE_API_URL=${VITE_API_URL}
        - VITE_POST_LOGOUT_REDIRECT=${VITE_POST_LOGOUT_REDIRECT}
    restart: "no"
    networks:
      - traefik-public
      - default
    ports:
      - "5173:80"
    volumes:
      - ./frontend:/app

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:latest'
    build:
      context: ./backend
      target: runtime
    restart: "no"
    networks:
      - traefik-public
      - default
    depends_on:
      db:
        condition: service_healthy
        restart: true
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://postgres:changeme@db:5432/quest_lock
    healthcheck:
      test: [ "CMD", "./health_check" ]
      interval: 10s
      start_period: 2s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16.2
    restart: "no"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?unset}
      - POSTGRES_USER=${POSTGRES_USER?unset}
      - POSTGRES_DB=${POSTGRES_DB?unset}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
  
volumes:
  app-db-data:

networks:
  traefik-public:
    external: false
